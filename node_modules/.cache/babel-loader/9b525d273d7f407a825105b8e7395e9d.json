{"ast":null,"code":"var _jsxFileName = \"/Users/sedonghwang/Desktop/react-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ToDoList from './Todolist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // when our app loads, we have an empty [] of todos\n  // todos: every single one of our todos inside of our todo state\n  // setTodos: assigning a new value?\n  const [todos, setTodos] = useState([]);\n\n  function addHandler(e) {}\n\n  return (\n    /*#__PURE__*/\n    // code fragment so that we can have multiple HTML elements inside the App.js return\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToDoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addHandler,\n        children: \"Add ToDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"0 left to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sedonghwang/Desktop/react-tutorial/src/App.js"],"names":["React","useState","ToDoList","App","todos","setTodos","addHandler","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASK,UAAT,CAAoBC,CAApB,EAAuB,CAEtB;;AAED;AAAA;AACE;AACA;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAFF;AAUD;;GApBQH,G;;KAAAA,G;AAsBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport ToDoList from './Todolist';\n\nfunction App() {\n  // when our app loads, we have an empty [] of todos\n  // todos: every single one of our todos inside of our todo state\n  // setTodos: assigning a new value?\n  const [todos, setTodos] = useState([])\n\n  function addHandler(e) {\n    \n  }\n\n  return (\n    // code fragment so that we can have multiple HTML elements inside the App.js return\n    <> \n      <ToDoList todos={todos}/>\n      <input type=\"text\" />\n      <button onClick={addHandler}>Add ToDo</button>\n      <button>Clear Completed</button>\n      <div>0 left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}